#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sun Apr 28 22:14:36 2019

@author: linjunqi
"""


from __future__ import division
import matplotlib.pyplot as plt
from sympy import *
import numpy as np

data = np.array([1,2,3,4,2,3,5,6])

  
def equation(data):
    
    length = len(data)
    start = 0
    end = length - 1
    q_mid = int((start+end)/3)
    h_mid = int(q_mid * 2)
    x = np.array([start,q_mid,h_mid,end])
    y = np.array([data[start],data[q_mid],data[h_mid],data[end]])
    
    a = Symbol('a')
    b = Symbol('b')
    c = Symbol('c')
    d = Symbol('d')
    
    f =  solve([a * x[0]**3 + b * x[0]**2 + c* x[0] +d - y[0], 
             a * x[1]**3 + b * x[1]**2 + c* x[1] +d - y[1],
              a * x[2]**3 + b * x[2]**2 + c* x[2] +d - y[2],
               a * x[3]**3 + b * x[3]**2 + c* x[3] +d - y[3]],[a, b, c, d])
    
#    y = f[a]*num**3 + f[b]*num**2 + f[c]*num + f[d] 
#    return y


    degree = 100
    z = np.zeros(degree)
    h = np.zeros(degree)
    temp = 0
    delta = len(data)/degree
    for i in range(degree):
        h[i] = temp
        temp += delta
    
    for i in range(degree):
        z[i] = f[a]*h[i]**3 + f[b]*h[i]**2 + f[c]*h[i] + f[d] 
    
    return h,z

h,z = equation(data)
plt.plot(h,z)
plt.show()














